<?xml version="1.0" encoding="utf8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace 等于命名空间，绑定一个对应的Dao/Mapper接口（实现一个接口）-->
<mapper namespace="org.example.springmybatis.UserMapper">
    <!--sql查询，id对应方法名,实现接口中的方法，resultType返回一个，resultMap返回一个集合-->
    <select id="getUserList" resultType="org.example.springmybatis.User">
        select *
        from users
    </select>

    <!--parameterType 表示传入的参数类型，还有一个parameterMap传入多个参数-->
    <select id="getUserById" resultType="org.example.springmybatis.User" parameterType="int">
        select * from users where id=#{id}  <!-- #{id}代表传入的参数，{}里为接口中的方法的参数名 -->
    </select>

    <!--插入用户,对象中的属性可以直接取出来-->
    <insert id="addUser" parameterType="org.example.springmybatis.User">
        insert into users (id, name, pwd)
        values (#{id}, #{name}, #{pwd})
    </insert>

    <!--修改用户-->
    <update id="updateUser" parameterType="org.example.springmybatis.User">
        update users
        set name=#{name},
            pwd=#{pwd}
        where id = #{id}
    </update>

    <!--删除用户-->
    <delete id="deleteUser" parameterType="int">
        delete
        from users
        where id = #{id}
    </delete>
</mapper>